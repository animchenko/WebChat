{"ast":null,"code":"import { withFormik } from 'formik';\nimport RegisterForm from '../components/RegisterForm';\nexport default withFormik({\n  mapPropsToValues: () => ({\n    email: ''\n  }),\n  validate: values => {\n    let errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: 'BasicForm' //helps with React DevTools\n\n})(RegisterForm);","map":{"version":3,"sources":["/home/anastasiya/Documents/task/webChat/chat/src/modules/RegisterFrom/containers/RegisterFrom.js"],"names":["withFormik","RegisterForm","mapPropsToValues","email","validate","values","errors","test","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,eAAeD,UAAU,CAAC;AACtBE,EAAAA,gBAAgB,EAAE,OAAO;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAP,CADI;AAEtBC,EAAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAG,CAACD,MAAM,CAACF,KAAX,EAAkB;AACdG,MAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACH,KAFD,MAEO,IACH,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADE,EAEL;AACEG,MAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACH;;AACD,WAAOG,MAAP;AACH,GAZqB;AAatBE,EAAAA,YAAY,EAAE,CAACH,MAAD,EAAS;AAAEI,IAAAA;AAAF,GAAT,KAA+B;AACzCC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAI,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAHS,EAGP,IAHO,CAAV;AAIH,GAlBqB;AAmBtBK,EAAAA,WAAW,EAAE,WAnBS,CAmBG;;AAnBH,CAAD,CAAV,CAoBZb,YApBY,CAAf","sourcesContent":["import { withFormik } from 'formik';\nimport RegisterForm from '../components/RegisterForm';\n\nexport default withFormik({\n    mapPropsToValues: () => ({ email: ''}),\n    validate: values => {\n        let errors = {};\n        if(!values.email) {\n            errors.email = 'Required';\n        } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n            errors.email = 'Invalid email address';\n        }\n        return errors;\n    },\n    handleSubmit: (values, { setSubmitting }) => {\n        setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n        }, 1000);\n    },\n    displayName: 'BasicForm' //helps with React DevTools\n})(RegisterForm);"]},"metadata":{},"sourceType":"module"}